No PowerShell do Windows, os comandos para criar e ativar um ambiente virtual Python e instalar depend√™ncias ficam assim:

# Criar o ambiente virtual
python -m venv .venv

# Ativar o ambiente virtual (PowerShell)
.venv\Scripts\Activate.ps1

# Atualizar o pip
python -m pip install --upgrade pip

# Instalar depend√™ncias do requirements.txt
pip install -r requirements.txt

# Instalar o pacote localmente em modo edit√°vel
pip install -e .


üí° Observa√ß√£o: Se voc√™ receber um erro de execu√ß√£o de scripts ao ativar (execution of scripts is disabled on this system), rode no PowerShell como administrador:

Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser


Depois, tente ativar novamente o .venv\Scripts\Activate.ps1.

Se quiser, posso te mostrar uma vers√£o compacta que j√° faz tudo de uma vez no PowerShell. Quer que eu fa√ßa?

Voc√™ disse:
fa√ßa uma vers√£o no powersherl


# Instru√ß√µes de compila√ß√£o e testes NGGS

Siga o passo a passo abaixo sempre que precisar validar e compilar o projeto ap√≥s altera√ß√µes.

## 1. Preparar ambiente Python


bash
python -m venv .venv
source .venv/bin/activate 
pip install --upgrade pip
pip install -r requirements.txt
pip install -e .


## 2. Validar qualidade do c√≥digo (backend + frontend)

Execute as mesmas checagens usadas no CI para garantir que a branch est√° saud√°vel:


bash
ruff check --output-format=github .
black --check .
isort --check-only .
pytest -q


- **Frontend**: ap√≥s altera√ß√µes visuais ou de JS, gere o build (mkdocs build --strict) e valide em mkdocs serve usando os breakpoints desktop (‚â•1280px) e mobile (‚â§480px). A calculadora eDPI deve manter 800x600 em monitores e responsividade plena em telas menores.

Se algum comando apontar problema, corrija antes de prosseguir.

## 3. Compilar o site est√°tico

Gere os arquivos do MkDocs em site/:


bash
mkdocs build --strict


O par√¢metro --strict garante que qualquer erro de lint nos arquivos Markdown interrompa o build.

> Ap√≥s builds que envolvam a calculadora, confirme manualmente no preview se inputs, bot√µes e gr√°ficos respondem corretamente. Em caso de altera√ß√µes na CLI, execute nggs gen weapon e nggs calc edpi para verificar se ainda geram arquivos dentro do padr√£o.

## 4. Visualizar em desenvolvimento

Para revisar o layout e intera√ß√µes em tempo real:


bash
mkdocs serve


Acesse http://127.0.0.1:8000 no navegador e pressione Ctrl+C para encerrar quando terminar.

## 5. Fluxo sugerido antes do commit

1. Atualize ou gere conte√∫do via CLI se necess√°rio (nggs gen weapon, nggs calc edpi).  
2. Rode os comandos dos passos 2 e 3.  
3. Verifique se nenhum arquivo .bak permanece no reposit√≥rio (eles s√£o ignorados pelo .gitignore).  
4. Teste a p√°gina PC > Otimizador CMD para garantir que a tabela e o bloco .bat renderizam corretamente.  
5. Fa√ßa commit apenas ap√≥s tudo estar verde.

Pronto! O mesmo pipeline √© executado automaticamente no GitHub Actions ao abrir um PR ou fazer push na main.
O ChatGPT disse:

Aqui est√° a vers√£o do seu guia adaptada para PowerShell no Windows, com todos os comandos ajustados:

Instru√ß√µes de compila√ß√£o e testes NGGS (PowerShell)

Siga o passo a passo abaixo sempre que precisar validar e compilar o projeto ap√≥s altera√ß√µes.

1. Preparar ambiente Python
# Criar o ambiente virtual
python -m venv .venv

# Ativar o ambiente virtual (PowerShell)
.venv\Scripts\Activate.ps1

# Atualizar pip
python -m pip install --upgrade pip

# Instalar depend√™ncias do requirements.txt
pip install -r requirements.txt

# Instalar o pacote localmente em modo edit√°vel
pip install -e .


‚ö†Ô∏è Se receber erro de execu√ß√£o de scripts (execution of scripts is disabled on this system), rode:

Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser


Depois, ative novamente o ambiente virtual.

2. Validar qualidade do c√≥digo (backend + frontend)

Execute as mesmas checagens usadas no CI para garantir que a branch est√° saud√°vel:

ruff check --output-format=github .
black --check .
isort --check-only .
pytest -q


Frontend: ap√≥s altera√ß√µes visuais ou de JS, gere o build (mkdocs build --strict) e valide em mkdocs serve usando os breakpoints desktop (‚â•1280px) e mobile (‚â§480px). A calculadora eDPI deve manter 800x600 em monitores e responsividade plena em telas menores.

Se algum comando apontar problema, corrija antes de prosseguir.

3. Compilar o site est√°tico

Gere os arquivos do MkDocs em site/:

mkdocs build --strict


O par√¢metro --strict garante que qualquer erro de lint nos arquivos Markdown interrompa o build.

Ap√≥s builds que envolvam a calculadora, confirme manualmente no preview se inputs, bot√µes e gr√°ficos respondem corretamente. Em caso de altera√ß√µes na CLI, execute nggs gen weapon e nggs calc edpi para verificar se ainda geram arquivos dentro do padr√£o.

4. Visualizar em desenvolvimento

Para revisar o layout e intera√ß√µes em tempo real:

mkdocs serve


Acesse http://127.0.0.1:8000 no navegador e pressione Ctrl+C para encerrar quando terminar.

5. Fluxo sugerido antes do commit

Atualize ou gere conte√∫do via CLI se necess√°rio (nggs gen weapon, nggs calc edpi).

Rode os comandos dos passos 2 e 3.

Verifique se nenhum arquivo .bak permanece no reposit√≥rio (eles s√£o ignorados pelo .gitignore).

Teste a p√°gina PC > Otimizador CMD para garantir que a tabela e o bloco .bat renderizam corretamente.

Fa√ßa commit apenas ap√≥s tudo estar verde.

Pronto! O mesmo pipeline √© executado automaticamente no GitHub Actions ao abrir um PR ou fazer push na main.